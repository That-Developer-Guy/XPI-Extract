; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!
#define MyAppName "XPI Extract"
#define MyAppVersion "1.2"
#define MyAppPublisher "That Developer Guy"
#define MyAppURL "https://github.com/That-Developer-Guy/XPI-Extract"
#define MyAppExeName "xpi_opener.exe"
#define MyRequirementsPath "https://raw.githubusercontent.com/That-Developer-Guy/XPI-Extract/Release-Uploads/v1.2/start_requirements.ps1" 
#define MyRequirementsPathBat "https://raw.githubusercontent.com/That-Developer-Guy/XPI-Extract/Release-Uploads/v1.2/requirements.bat" 
#define MyExeDownloadURL "https://github.com/That-Developer-Guy/XPI-Extract/raw/Release-Uploads/v1.2/xpi_opener.exe"
#define MyIconDownloadURL "https://raw.githubusercontent.com/That-Developer-Guy/XPI-Extract/Release-Uploads/v1.2/VisualElements_70.ico"

#include <idp.iss>

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{52E8F4CD-4B61-409A-99D0-176E1FA45397}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={pf}\{#MyAppName}
DisableProgramGroupPage=yes
DisableDirPage=yes
OutputBaseFilename=XPI-Extract-{#MyAppVersion}-Installer
Compression=lzma
SolidCompression=yes
PrivilegesRequired=admin

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Components]
Name: app;  Description: "XPI Extract";  Types: full compact custom; Flags: fixed
Name: help; Description: "Help files";  Types: full
Name: icon;  Description: "Icon file"; Types: full

[Files]
; These files will be downloaded
Source: "{tmp}\xpi_opener.exe"; DestDir: "{app}"; Flags: external; ExternalSize: 1048576; Components: app
Source: "{tmp}\VisualElements_70.ico"; DestDir: "{app}"; Flags: external; ExternalSize: 1048576; Components: icon
Source: "{tmp}\start_requirements.ps1"; DestDir: "{tmp}"; Flags: external; ExternalSize: 1048576; Components: help
Source: "{tmp}\requirements.bat"; DestDir: "{tmp}"; Flags: external; ExternalSize: 1048576; Components: help
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Code]
procedure CurStepChanged(CurStep: TSetupStep); 
var 
  Params: string; 
  ResultCode: Integer; 
begin 
  if (CurStep = ssPostInstall) then 
  begin     
    Params := '-ExecutionPolicy Bypass -File ' + AddQuotes(ExpandConstant('{tmp}\start_requirements.ps1')); 
    if not Exec('powershell.exe', Params, '', SW_HIDE, ewWaitUntilTerminated, ResultCode) then 
      MsgBox('Ausfï¿½hrung des PowerShell-Skripts fehlgeschlagen. Exit-Code: ' + IntToStr(ResultCode), 
             mbInformation, MB_OK); 
  end; 
end; 
procedure InitializeWizard();
begin
  idpAddFileSize('{#MyExeDownloadURL}', ExpandConstant('{tmp}\xpi_opener.exe'), 1048576);
  idpAddFileSize('{#MyRequirementsPath}', ExpandConstant('{tmp}\start_requirements.ps1'), 1048576);
  idpAddFileSize('{#MyRequirementsPathBat}', ExpandConstant('{tmp}\requirements.bat'), 1048576);
  idpAddFileSize('{#MyIconDownloadURL}', ExpandConstant('{tmp}\VisualElements_70.ico'), 1048576);

  idpDownloadAfter(wpReady);
end;

[Icons]
Name: "{commonprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{commondesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent
